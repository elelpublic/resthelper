/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'lars' at '13.06.14 10:39' with Gradle 1.12
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.12/userguide/tutorial_java_projects.html
 */

apply plugin: 'java'
apply plugin: 'war'
//apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'ivy-publish'
apply plugin: 'jetty'


// PROJECT ---------------------------------------------------------------------

group = 'com.infodesire'
version = '0.1.5'
httpPort = 8081

// BUILD & DEPENDENCIES ---------------------------------------------------------------------


// In this section you declare where to find the dependencies of your project
repositories {
    
    mavenCentral()
    
	ivy {
		// there is a lot of legacy to adhere to here:
    	url 'http://edge/s/repository/maven'
    	layout 'pattern' , {
            artifact '[organisation].[module]/[type]s/[artifact]-[revision](.[ext])'
        }
    }
    
}

// In this section you declare the dependencies for your production and test code
dependencies {

    compile(

      // the original proxy
      'org.mitre.dsmiley.httpproxy:smiley-http-proxy-servlet:1.5'	
      , 'org.apache.httpcomponents:httpclient:4.3.5'

      // utils    
      , 'commons-collections:commons-collections:3.2.1'
    	, 'com.google.guava:guava:18.0'
    	, 'com.infodesire:bsmcommons:0.4.7'
    	, 'org.apache.commons:commons-lang3:3.3.2'
    	, 'log4j:log4j:1.2.17'
     
    )
    
    providedCompile(
    	'servletapi:servlet-api:2.4'
    )

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile ( 
      'junit:junit:4.11'
      , 'commons-io:commons-io:2.4'
    )

}

compileJava {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}


// WEBAPP ---------------------------------------------------------------------

def warArchiveName = 'resthelper.war'

war {
	archiveName = warArchiveName
	from( '.' ) {
		include 'bower_components/**'
		exclude 'bower_components/jquery/src/**'
	}
}


// PUBLISH ---------------------------------------------------------------------


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'src'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
	publications {
		ivyJava( IvyPublication ) {
			from components.java
			artifact(sourcesJar) {
                type "source"
                conf "runtime"
            }
		}
	}
	repositories {
		ivy {
			// there is a lot of legacy to adhere to here:
	    	url 'file://s/repository/maven'
	    	layout 'pattern' , {
	            artifact '[organisation].[module]/[type]s/[artifact]-[revision](.[ext])'
	        }
	    }
	}
}


// TWEAKS  --------------------------------------------------------

// change some gradle defaults

eclipse {
  classpath {
    //customizing the classes output directory:
    defaultOutputDir = file('eclipse-build')
  }
}


